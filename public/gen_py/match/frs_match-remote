#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from match import frs_match
from match.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  MatchPicReturn request_1_1(ClientInMsg1v1 req1)')
  print('   request_1_N(ClientInMsg1vN req1)')
  print('  i32 request_video_detect(ClientInMsgVideoDetect req1)')
  print('  GetPicFeatureAndSmallPicReturn get_pic_feature_and_small_pic(GetPicFeatureAndSmallPicIn req1)')
  print('  GetPersonInfoByIDOut get_person_info_by_id(string id)')
  print('  match_conf match_config(match_conf req1)')
  print('  PicSerchReturn request_pic_search(ClientInMsgPicSearch req1)')
  print('  i32 push_alarm(alarm_info req1)')
  print('  GrabPicSearchReturn request_grabpic_search(PicSearchInGrab req1)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = frs_match.Client(protocol)
transport.open()

if cmd == 'request_1_1':
  if len(args) != 1:
    print('request_1_1 requires 1 args')
    sys.exit(1)
  pp.pprint(client.request_1_1(eval(args[0]),))

elif cmd == 'request_1_N':
  if len(args) != 1:
    print('request_1_N requires 1 args')
    sys.exit(1)
  pp.pprint(client.request_1_N(eval(args[0]),))

elif cmd == 'request_video_detect':
  if len(args) != 1:
    print('request_video_detect requires 1 args')
    sys.exit(1)
  pp.pprint(client.request_video_detect(eval(args[0]),))

elif cmd == 'get_pic_feature_and_small_pic':
  if len(args) != 1:
    print('get_pic_feature_and_small_pic requires 1 args')
    sys.exit(1)
  pp.pprint(client.get_pic_feature_and_small_pic(eval(args[0]),))

elif cmd == 'get_person_info_by_id':
  if len(args) != 1:
    print('get_person_info_by_id requires 1 args')
    sys.exit(1)
  pp.pprint(client.get_person_info_by_id(args[0],))

elif cmd == 'match_config':
  if len(args) != 1:
    print('match_config requires 1 args')
    sys.exit(1)
  pp.pprint(client.match_config(eval(args[0]),))

elif cmd == 'request_pic_search':
  if len(args) != 1:
    print('request_pic_search requires 1 args')
    sys.exit(1)
  pp.pprint(client.request_pic_search(eval(args[0]),))

elif cmd == 'push_alarm':
  if len(args) != 1:
    print('push_alarm requires 1 args')
    sys.exit(1)
  pp.pprint(client.push_alarm(eval(args[0]),))

elif cmd == 'request_grabpic_search':
  if len(args) != 1:
    print('request_grabpic_search requires 1 args')
    sys.exit(1)
  pp.pprint(client.request_grabpic_search(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
